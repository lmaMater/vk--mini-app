{"version":3,"sources":["../../../../src/components/CustomSelect/CustomSelect.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames, debounce } from '@vkontakte/vkjs';\nimport { useAdaptivity } from '../../hooks/useAdaptivity';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport { useDOM } from '../../lib/dom';\nimport type { Placement } from '../../lib/floating';\nimport { defaultFilterFn, type FilterFn } from '../../lib/select';\nimport { useIsomorphicLayoutEffect } from '../../lib/useIsomorphicLayoutEffect';\nimport { warnOnce } from '../../lib/warnOnce';\nimport type { TrackerOptionsProps } from '../CustomScrollView/useTrackerVisibility';\nimport {\n  CustomSelectDropdown,\n  type CustomSelectDropdownProps,\n} from '../CustomSelectDropdown/CustomSelectDropdown';\nimport { DropdownIcon } from '../DropdownIcon/DropdownIcon';\nimport type { FormFieldProps } from '../FormField/FormField';\nimport type { NativeSelectProps } from '../NativeSelect/NativeSelect';\nimport type { SelectType } from '../Select/Select';\nimport { Footnote } from '../Typography/Footnote/Footnote';\nimport {\n  CustomSelectClearButton,\n  type CustomSelectClearButtonProps,\n} from './CustomSelectClearButton';\nimport { CustomSelectInput, type CustomSelectInputProps } from './CustomSelectInput';\nimport {\n  calculateInputValueFromOptions,\n  defaultRenderOptionFn,\n  findIndexAfter,\n  findIndexBefore,\n  findSelectedIndex,\n} from './helpers';\nimport type { CustomSelectOptionInterface, CustomSelectRenderOption } from './types';\nimport styles from './CustomSelect.module.css';\n\nconst sizeYClassNames = {\n  none: styles['CustomSelect--sizeY-none'],\n  compact: styles['CustomSelect--sizeY-compact'],\n};\n\nconst warn = warnOnce('CustomSelect');\n\nconst checkOptionsValueType = <T extends CustomSelectOptionInterface>(options: T[]) => {\n  if (new Set(options.map((item) => typeof item.value)).size > 1) {\n    warn(\n      'Некоторые значения ваших опций имеют разные типы. onChange всегда возвращает строковый тип.',\n      'error',\n    );\n  }\n};\n\nconst handleOptionDown: MouseEventHandler = (e: React.MouseEvent<HTMLElement>) => {\n  e.preventDefault();\n};\n\nconst filter = <T extends CustomSelectOptionInterface>(\n  options: SelectProps<T>['options'],\n  inputValue: string,\n  filterFn: SelectProps<T>['filterFn'],\n) => {\n  return typeof filterFn === 'function'\n    ? options.filter((option) => filterFn(inputValue, option))\n    : options;\n};\n\nexport type { CustomSelectClearButtonProps, CustomSelectOptionInterface, CustomSelectRenderOption };\n\nexport interface SelectProps<\n  OptionInterfaceT extends CustomSelectOptionInterface = CustomSelectOptionInterface,\n> extends NativeSelectProps,\n    Omit<FormFieldProps, 'maxHeight'>,\n    TrackerOptionsProps,\n    Pick<\n      CustomSelectDropdownProps,\n      'overscrollBehavior' | 'autoHideScrollbar' | 'autoHideScrollbarDelay'\n    >,\n    Pick<CustomSelectInputProps, 'minLength' | 'maxLength' | 'pattern' | 'readOnly'> {\n  /**\n   * ref на внутрений компонент input\n   */\n  getSelectInputRef?: React.Ref<HTMLInputElement>;\n  /**\n   * Если `true`, то при клике на `CustomSelect` в нём появится текстовое поле для поиска по `options`. По умолчанию поиск\n   * производится по `option.label`.\n   */\n  searchable?: boolean;\n  /**\n   * Текст, который будет отображен, если приходит пустой `options`.\n   */\n  emptyText?: string;\n  /**\n   * Событие изменения текстового поля\n   */\n  onInputChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  options: OptionInterfaceT[];\n  /**\n   * Функция для кастомной фильтрации. По умолчанию поиск производится по `option.label`.\n   */\n  filterFn?: false | FilterFn<OptionInterfaceT>;\n  popupDirection?: 'top' | 'bottom';\n  /**\n   * Рендер-проп для кастомного рендера опции.\n   * В объекте аргумента приходят [свойства опции](https://vkcom.github.io/VKUI/#/CustomSelectOption?id=props)\n   *\n   * > ⚠️  Важно: cвойство опции `disabled` должно выставляться только через проп `options`.\n   * > Запрещается выставлять `disabled` проп опциям в обход `options`, иначе `CustomSelect` не будет знать об актуальном состоянии\n   * опции.\n   */\n  renderOption?: (props: CustomSelectRenderOption<OptionInterfaceT>) => React.ReactNode;\n  /**\n   * Рендер-проп для кастомного рендера содержимого дропдауна.\n   * В `defaultDropdownContent` содержится список опций в виде скроллящегося блока.\n   */\n  renderDropdown?: ({\n    defaultDropdownContent,\n  }: {\n    defaultDropdownContent: React.ReactNode;\n  }) => React.ReactNode;\n  /**\n   * Если `true`, то в дропдауне вместо списка опций рисуется спиннер. При переданных `renderDropdown` и `fetching: true`\n   * \"победит\" `renderDropdown`.\n   */\n  fetching?: boolean;\n  onClose?: VoidFunction;\n  onOpen?: VoidFunction;\n  /**\n   * Иконка раскрывающегося списка\n   */\n  icon?: React.ReactNode;\n  /**\n   * Кастомная кнопка для очистки значения.\n   * Должна принимать обязательное свойство `onClick`\n   */\n  ClearButton?: React.ComponentType<CustomSelectClearButtonProps>;\n  /**\n   * Если `true`, то справа будет отображаться кнопка для очистки значения\n   */\n  allowClearButton?: boolean;\n  /**\n   * (e2e) testId кнопки очистки\n   */\n  clearButtonTestId?: string;\n  /**\n   * Отступ от выпадающего списка\n   */\n  dropdownOffsetDistance?: number;\n  /**\n   * Ширина раскрывающегося списка зависит от контента\n   */\n  dropdownAutoWidth?: boolean;\n  forceDropdownPortal?: boolean;\n  selectType?: SelectType;\n  /**\n   * Отключает максимальную высоту по умолчанию\n   */\n  noMaxHeight?: boolean;\n  /**\n   * (e2e) testId элемента, внутри которого отображается текст выбранной опции `CustomSelect` или плейсхолдер.\n   */\n  labelTextTestId?: string;\n  nativeSelectTestId?: string;\n}\n\ntype MouseEventHandler = (event: React.MouseEvent<HTMLElement>) => void;\n\n/**\n * @see https://vkcom.github.io/VKUI/#/CustomSelect\n */\nexport function CustomSelect<OptionInterfaceT extends CustomSelectOptionInterface>(\n  props: SelectProps<OptionInterfaceT>,\n): React.ReactNode {\n  const [opened, setOpened] = React.useState(false);\n  const {\n    before,\n    name,\n    className,\n    getRef,\n    getRootRef,\n    popupDirection = 'bottom',\n    style,\n    onChange,\n    children,\n    'onInputChange': onInputChangeProp,\n    renderDropdown,\n    onOpen,\n    onClose,\n    fetching,\n    forceDropdownPortal,\n    selectType = 'default',\n    autoHideScrollbar,\n    autoHideScrollbarDelay,\n    searchable = false,\n    'renderOption': renderOptionProp = defaultRenderOptionFn,\n    'options': optionsProp,\n    emptyText = 'Ничего не найдено',\n    filterFn = defaultFilterFn,\n    'icon': iconProp,\n    ClearButton = CustomSelectClearButton,\n    allowClearButton = false,\n    dropdownOffsetDistance = 0,\n    dropdownAutoWidth = false,\n    noMaxHeight = false,\n    'aria-labelledby': ariaLabelledBy,\n    clearButtonTestId,\n    nativeSelectTestId,\n    defaultValue,\n    required,\n    getSelectInputRef,\n    overscrollBehavior,\n    ...restProps\n  } = props;\n\n  if (process.env.NODE_ENV === 'development') {\n    checkOptionsValueType(optionsProp);\n  }\n\n  const { sizeY = 'none' } = useAdaptivity();\n\n  const containerRef = React.useRef<HTMLDivElement>(null);\n  const handleRootRef = useExternRef(containerRef, getRootRef);\n  const scrollBoxRef = React.useRef<HTMLDivElement | null>(null);\n  const selectElRef = useExternRef(getRef);\n  const optionsWrapperRef = React.useRef<HTMLDivElement>(null);\n  const selectInputRef = useExternRef(getSelectInputRef);\n\n  const [focusedOptionIndex, setFocusedOptionIndex] = React.useState<number | undefined>(-1);\n  const [isControlledOutside, setIsControlledOutside] = React.useState(props.value !== undefined);\n  const [nativeSelectValue, setNativeSelectValue] = React.useState(\n    () => props.value ?? defaultValue ?? (allowClearButton ? '' : undefined),\n  );\n\n  const [inputValue, setInputValue] = React.useState(() =>\n    calculateInputValueFromOptions(optionsProp, nativeSelectValue),\n  );\n\n  const [popperPlacement, setPopperPlacement] = React.useState<Placement>(popupDirection);\n  const [options, setOptions] = React.useState(optionsProp);\n  const [selectedOptionIndex, setSelectedOptionIndex] = React.useState<number | undefined>(\n    findSelectedIndex(optionsProp, props.value ?? defaultValue, allowClearButton),\n  );\n\n  React.useEffect(() => {\n    setIsControlledOutside(props.value !== undefined);\n    setNativeSelectValue((nativeSelectValue) => props.value ?? nativeSelectValue);\n  }, [props.value]);\n\n  useIsomorphicLayoutEffect(() => {\n    if (\n      options.some(({ value }) => nativeSelectValue === value) ||\n      (allowClearButton && nativeSelectValue === '')\n    ) {\n      const event = new Event('change', { bubbles: true });\n\n      selectElRef.current?.dispatchEvent(event);\n    }\n  }, [nativeSelectValue]);\n\n  const selected = React.useMemo(() => {\n    if (!options.length) {\n      return null;\n    }\n\n    return selectedOptionIndex !== undefined ? options[selectedOptionIndex] : undefined;\n  }, [options, selectedOptionIndex]);\n\n  const openedClassNames = React.useMemo(\n    () =>\n      (opened &&\n        dropdownOffsetDistance === 0 &&\n        (popperPlacement.includes('top')\n          ? styles['CustomSelect--pop-up']\n          : styles['CustomSelect--pop-down'])) ||\n      undefined,\n    [dropdownOffsetDistance, opened, popperPlacement],\n  );\n\n  const scrollToElement = React.useCallback((index: number, center = false) => {\n    const dropdown = scrollBoxRef.current;\n    const optionsWrapper = optionsWrapperRef.current;\n    const item =\n      dropdown && optionsWrapper ? (optionsWrapper.children[index] as HTMLElement) : null;\n\n    if (!item || !dropdown) {\n      return;\n    }\n\n    const dropdownHeight = dropdown.offsetHeight;\n    const scrollTop = dropdown.scrollTop;\n    const itemTop = item.offsetTop;\n    const itemHeight = item.offsetHeight;\n\n    if (center) {\n      dropdown.scrollTop = itemTop - dropdownHeight / 2 + itemHeight / 2;\n    } else if (itemTop + itemHeight > dropdownHeight + scrollTop) {\n      dropdown.scrollTop = itemTop - dropdownHeight + itemHeight;\n    } else if (itemTop < scrollTop) {\n      dropdown.scrollTop = itemTop;\n    }\n  }, []);\n\n  const focusOptionByIndex = React.useCallback(\n    (index: number | undefined, scrollTo = true) => {\n      if (index === undefined || index < 0 || index > (options.length ?? 0) - 1) {\n        return;\n      }\n\n      const option = options[index];\n\n      if (option?.disabled) {\n        return;\n      }\n\n      if (scrollTo) {\n        scrollToElement(index);\n      }\n\n      // Это оптимизация, прежде всего, под `onMouseMove`\n      setFocusedOptionIndex((focusedOptionIndex) =>\n        focusedOptionIndex !== index ? index : focusedOptionIndex,\n      );\n    },\n    [options, scrollToElement],\n  );\n\n  const isValidIndex = React.useCallback(\n    (index: number) => {\n      return index >= 0 && index < (options.length ?? 0);\n    },\n    [options.length],\n  );\n\n  const setScrollBoxRef = React.useCallback(\n    (ref: HTMLDivElement | null) => {\n      scrollBoxRef.current = ref;\n\n      if (ref && selectedOptionIndex !== undefined && isValidIndex(selectedOptionIndex)) {\n        {\n          scrollToElement(selectedOptionIndex, true);\n        }\n      }\n    },\n    [isValidIndex, scrollToElement, selectedOptionIndex],\n  );\n\n  const [keyboardInput, setKeyboardInput] = React.useState('');\n  const resetKeyboardInput = React.useCallback(() => {\n    setKeyboardInput('');\n  }, []);\n\n  const resetFocusedOption = React.useCallback(() => {\n    setFocusedOptionIndex(-1);\n  }, []);\n\n  const onKeyboardInput = React.useCallback(\n    (key: string) => {\n      if (!opened) {\n        setOpened(true);\n      }\n      resetFocusedOption();\n      const fullInput = keyboardInput + key;\n\n      setKeyboardInput(fullInput);\n    },\n    [keyboardInput, opened, resetFocusedOption],\n  );\n\n  /**\n   * Note: сбрасывать `options` через `setOptions(optionsProp)` не нужно.\n   *  Сброс происходит в одном из эффекте `updateOptionsAndSelectedOptionIndex()`.\n   */\n  const close = React.useCallback(() => {\n    resetKeyboardInput();\n\n    setOpened(false);\n    resetFocusedOption();\n    onClose?.();\n  }, [onClose, resetKeyboardInput, resetFocusedOption]);\n\n  const selectOption = React.useCallback(\n    (index: number) => {\n      const item = options[index];\n\n      close();\n      setNativeSelectValue(item?.value);\n\n      const shouldTriggerOnChangeWhenControlledAndInnerValueIsOutOfSync =\n        isControlledOutside &&\n        props.value !== nativeSelectValue &&\n        nativeSelectValue === item?.value;\n\n      if (shouldTriggerOnChangeWhenControlledAndInnerValueIsOutOfSync) {\n        const event = new Event('change', { bubbles: true });\n        selectElRef.current?.dispatchEvent(event);\n      }\n    },\n    [close, options, selectElRef, isControlledOutside, props.value, nativeSelectValue],\n  );\n\n  const selectFocused = React.useCallback(() => {\n    if (focusedOptionIndex === undefined || !isValidIndex(focusedOptionIndex)) {\n      return;\n    }\n\n    selectOption(focusedOptionIndex);\n  }, [focusedOptionIndex, isValidIndex, selectOption]);\n\n  const open = React.useCallback(() => {\n    setOpened(true);\n    setFocusedOptionIndex(selectedOptionIndex);\n\n    if (typeof onOpen === 'function') {\n      onOpen();\n    }\n  }, [onOpen, selectedOptionIndex]);\n\n  const onBlur = React.useCallback(() => {\n    close();\n    const event = new Event('focusout', { bubbles: true });\n    selectElRef.current?.dispatchEvent(event);\n\n    setInputValue(calculateInputValueFromOptions(optionsProp, nativeSelectValue));\n  }, [close, selectElRef, optionsProp, nativeSelectValue]);\n\n  const onFocus = React.useCallback(() => {\n    const event = new Event('focusin', { bubbles: true });\n    selectElRef.current?.dispatchEvent(event);\n    selectInputRef.current?.select();\n  }, [selectElRef, selectInputRef]);\n\n  const onClick = React.useCallback(() => {\n    if (opened) {\n      close();\n    } else {\n      open();\n    }\n  }, [close, open, opened]);\n\n  const handleKeyUp = React.useMemo(() => debounce(resetKeyboardInput, 1000), [resetKeyboardInput]);\n\n  const focusOption = React.useCallback(\n    (type: 'next' | 'prev') => {\n      let index = focusedOptionIndex;\n\n      if (type === 'next') {\n        const nextIndex = findIndexAfter(options, index);\n        index = nextIndex === -1 ? findIndexAfter(options) : nextIndex; // Следующий за index или первый валидный до index\n      } else if (type === 'prev') {\n        const beforeIndex = findIndexBefore(options, index);\n        index = beforeIndex === -1 ? findIndexBefore(options) : beforeIndex; // Предшествующий index или последний валидный после index\n      }\n\n      focusOptionByIndex(index);\n    },\n    [focusOptionByIndex, focusedOptionIndex, options],\n  );\n\n  React.useEffect(\n    function filterOptions() {\n      const options =\n        searchable && inputValue !== undefined\n          ? filter(optionsProp, inputValue, filterFn)\n          : optionsProp;\n\n      setOptions(options);\n    },\n    [filterFn, inputValue, optionsProp, searchable],\n  );\n\n  const selectValue = props.value ?? nativeSelectValue ?? defaultValue;\n  React.useEffect(\n    function updateSelectedOptionIndexOnValueChange() {\n      setSelectedOptionIndex(findSelectedIndex(options, selectValue, allowClearButton));\n    },\n    [selectValue, allowClearButton, options],\n  );\n\n  const prevSelectValueRef = React.useRef(selectValue);\n  React.useEffect(\n    function updateInputValueOnSelectValueChange() {\n      if (prevSelectValueRef.current === selectValue) {\n        return;\n      }\n      setInputValue(calculateInputValueFromOptions(optionsProp, selectValue));\n    },\n    [selectValue, optionsProp],\n  );\n  React.useEffect(\n    function updatePrevSelectValue() {\n      prevSelectValueRef.current = selectValue;\n    },\n    [selectValue],\n  );\n\n  const onNativeSelectChange: React.ChangeEventHandler<HTMLSelectElement> = (e) => {\n    const newSelectedOptionIndex = findSelectedIndex(\n      options,\n      e.currentTarget.value,\n      allowClearButton,\n    );\n\n    if (selectedOptionIndex !== newSelectedOptionIndex) {\n      if (!isControlledOutside) {\n        setSelectedOptionIndex(newSelectedOptionIndex);\n      }\n      onChange?.(e);\n    }\n  };\n\n  const onInputChange: React.ChangeEventHandler<HTMLInputElement> = React.useCallback(\n    (e) => {\n      onInputChangeProp && onInputChangeProp(e);\n\n      const options = filter(optionsProp, e.target.value, filterFn);\n      setOptions(options);\n      setSelectedOptionIndex(findSelectedIndex(options, nativeSelectValue, allowClearButton));\n\n      setInputValue(e.target.value);\n    },\n    [filterFn, nativeSelectValue, onInputChangeProp, optionsProp, allowClearButton],\n  );\n\n  const areOptionsShown = React.useCallback(() => {\n    return scrollBoxRef.current !== null;\n  }, []);\n\n  const handleKeyDownSelect = React.useCallback(\n    (event: React.KeyboardEvent) => {\n      if (event.key.length === 1 && event.key !== ' ') {\n        onKeyboardInput(event.key);\n        return;\n      }\n\n      ['ArrowUp', 'ArrowDown', 'Escape', 'Enter'].includes(event.key) &&\n        areOptionsShown() &&\n        event.preventDefault();\n\n      switch (event.key) {\n        case 'ArrowUp':\n          if (opened) {\n            areOptionsShown() && focusOption('prev');\n          } else {\n            open();\n          }\n          break;\n        case 'ArrowDown':\n          if (opened) {\n            areOptionsShown() && focusOption('next');\n          } else {\n            open();\n          }\n          break;\n        case 'Escape':\n          close();\n          break;\n        case 'Backspace':\n        case 'Delete': {\n          if (!opened) {\n            setOpened(true);\n          }\n          resetFocusedOption();\n\n          break;\n        }\n        case 'Enter':\n        case 'Spacebar':\n        case ' ':\n          if (opened) {\n            areOptionsShown() && selectFocused();\n          } else {\n            open();\n          }\n          break;\n      }\n    },\n    [\n      areOptionsShown,\n      close,\n      focusOption,\n      onKeyboardInput,\n      open,\n      opened,\n      selectFocused,\n      resetFocusedOption,\n    ],\n  );\n\n  const handleOptionClick = React.useCallback(\n    (e: React.MouseEvent<HTMLElement>) => {\n      const index = Array.prototype.indexOf.call(\n        e.currentTarget.parentNode?.children,\n        e.currentTarget,\n      );\n      const option = options[index];\n\n      if (option && !option.disabled) {\n        selectOption(index);\n      }\n    },\n    [options, selectOption],\n  );\n\n  const prevMousePositionRef = React.useRef<{\n    x: React.MouseEvent['clientX'];\n    y: React.MouseEvent['clientY'];\n  }>({ x: 0, y: 0 });\n  const focusOptionOnMouseMove = React.useCallback(\n    (e: React.MouseEvent<HTMLElement>, index: number) => {\n      const isMouseChangedPosition =\n        Math.abs(prevMousePositionRef.current.x - e.clientX) >= 1 ||\n        Math.abs(prevMousePositionRef.current.y - e.clientY) >= 1;\n\n      if (isMouseChangedPosition) {\n        focusOptionByIndex(index, false);\n      }\n\n      prevMousePositionRef.current = { x: e.clientX, y: e.clientY };\n    },\n    [focusOptionByIndex],\n  );\n\n  const popupAriaId = React.useId();\n  const renderOption = React.useCallback(\n    (option: OptionInterfaceT, index: number) => {\n      const hovered = index === focusedOptionIndex;\n      const selected = index === selectedOptionIndex;\n\n      return (\n        <React.Fragment key={`${typeof option.value}-${option.value}`}>\n          {renderOptionProp({\n            option,\n            hovered,\n            children: option.label,\n            selected,\n            disabled: option.disabled,\n            onClick: handleOptionClick,\n            onMouseDown: handleOptionDown,\n            // Используем `onMouseMove` вместо `onMouseEnter/onMouseOver`.\n            // Потому что если при навигации с клавиатуры курсор наведён на\n            // список, то при первом автоматическом скролле списка вызывается событие MouseOver/MouseEnter\n            // обработчик которого фокусирует опцию под курсором, хотя при навигация с клавиатуры пользователь мог уйти дальше по списку, это путает.\n            // Причём координаты события меняются на пару пикселей по сравнению с прошлым вызовом,\n            // а значит нельзя на них опираться, чтобы запретить обработку такого события.\n            // C mousemove такой проблемы нет, что позволяет реализовать поведение при наведении с клавиатуры и при наведении мышью идентично `<select>`.\n            onMouseMove: (e) => focusOptionOnMouseMove(e, index),\n            id: `${popupAriaId}-${option.value}`,\n          })}\n        </React.Fragment>\n      );\n    },\n    [\n      focusedOptionIndex,\n      handleOptionClick,\n      focusOptionOnMouseMove,\n      renderOptionProp,\n      selectedOptionIndex,\n      popupAriaId,\n    ],\n  );\n\n  const resolvedContent = React.useMemo(() => {\n    const defaultDropdownContent =\n      options.length > 0 ? (\n        <div ref={optionsWrapperRef}>{options.map(renderOption)}</div>\n      ) : (\n        <Footnote className={styles['CustomSelect__empty']}>{emptyText}</Footnote>\n      );\n\n    if (typeof renderDropdown === 'function') {\n      return renderDropdown({ defaultDropdownContent });\n    } else {\n      return defaultDropdownContent;\n    }\n  }, [emptyText, options, renderDropdown, renderOption]);\n\n  const focusOnInputTimerRef = React.useRef<ReturnType<typeof setTimeout>>();\n  const focusOnInput = React.useCallback(() => {\n    clearTimeout(focusOnInputTimerRef.current);\n\n    focusOnInputTimerRef.current = setTimeout(() => {\n      selectInputRef.current && selectInputRef.current.focus();\n    }, 0);\n  }, [selectInputRef]);\n  useIsomorphicLayoutEffect(function clearFocusOnInputTimer() {\n    return () => {\n      clearTimeout(focusOnInputTimerRef.current);\n    };\n  }, []);\n\n  const controlledValueSet = isControlledOutside && props.value !== '';\n  const uncontrolledValueSet = !isControlledOutside && nativeSelectValue !== '';\n  const clearButtonShown =\n    allowClearButton && !opened && (controlledValueSet || uncontrolledValueSet);\n\n  const clearButton = React.useMemo(() => {\n    if (!clearButtonShown) {\n      return null;\n    }\n\n    return (\n      <ClearButton\n        className={iconProp === undefined ? styles['CustomSelect--clear-icon'] : undefined}\n        onClick={function clearSelectState() {\n          setNativeSelectValue('');\n          setInputValue('');\n          focusOnInput();\n        }}\n        disabled={restProps.disabled}\n        data-testid={clearButtonTestId}\n      />\n    );\n  }, [\n    clearButtonShown,\n    ClearButton,\n    iconProp,\n    restProps.disabled,\n    clearButtonTestId,\n    focusOnInput,\n  ]);\n\n  const icon = React.useMemo(() => {\n    if (iconProp !== undefined) {\n      return iconProp;\n    }\n\n    return (\n      <DropdownIcon\n        className={clearButtonShown ? styles['CustomSelect__dropdown-icon'] : undefined}\n        opened={opened}\n      />\n    );\n  }, [clearButtonShown, iconProp, opened]);\n\n  const afterIcons = (icon || clearButtonShown) && (\n    <React.Fragment>\n      {clearButton}\n      {icon}\n    </React.Fragment>\n  );\n\n  const { document } = useDOM();\n  const passClickAndFocusToInputOnClick = React.useCallback(\n    (e: React.MouseEvent<HTMLDivElement>) => {\n      // Раньше внешней оберткой CustomSelect был <label>, что позволяло по клику в любую область CustomSelect,\n      // даже где нету интерактивного элемента, фокусировать <input> и передавать на него событие клика.\n      // Так как мы больше не оборачиваем CustomSelect в <label>, то для обертки CustomSelect мы симулируем работу <label>.\n      // передаем фокус и клик по <input>, если пользователь кликнул в зоне обертки.\n      // В <label> мы не больше не оборачиваем, потому что это заставляет скринридер\n      // дважды произносить текст выбранной опции при фокусе, если CustomSelect связан с внешним <label>.\n      // Воспроизводится в некоторых версиях Chrome, при навигации по странице с помощью стрелок.\n      // Договорились со специалистом по доступности убрать <label>-обёртки из Select и CustomSelect\n\n      if (!selectInputRef.current || !document) {\n        return;\n      }\n\n      const clickTargetIsNotAnInput = e.target !== selectInputRef.current;\n      if (clickTargetIsNotAnInput) {\n        selectInputRef.current.click();\n\n        const inputIsNotFocused = document.activeElement !== selectInputRef.current;\n        if (inputIsNotFocused) {\n          focusOnInput();\n        }\n      }\n    },\n    [document, focusOnInput, selectInputRef],\n  );\n\n  const preventInputBlurWhenClickInsideFocusedSelectArea = (\n    e: React.MouseEvent<HTMLDivElement>,\n  ) => {\n    // Так как инпут больше не оборачивается пустым лэйблом, то клик внутри обертки,\n    // но вне инпута (например по иконке дропдауна), будет убирать фокус с инпута.\n    // Чтобы в такой ситуации отключить blur инпута мы превентим mousedown событие обёртки\n    const isInputFocused = document && document.activeElement === selectInputRef.current;\n    const clickTarget = e.target as HTMLElement;\n    const inputClicked = selectInputRef.current?.contains(clickTarget);\n    if (isInputFocused && !inputClicked) {\n      e.preventDefault();\n    }\n  };\n\n  const ariaActiveDescendantOptionIndex: undefined | number =\n    focusedOptionIndex !== -1 ? focusedOptionIndex : undefined;\n  const ariaActiveDescendantId =\n    ariaActiveDescendantOptionIndex !== undefined\n      ? options[ariaActiveDescendantOptionIndex] && options[ariaActiveDescendantOptionIndex].value\n      : null;\n\n  const selectInputAriaProps: React.HTMLAttributes<HTMLElement> = {\n    'role': 'combobox',\n    'aria-controls': popupAriaId,\n    'aria-expanded': opened,\n    'aria-activedescendant':\n      ariaActiveDescendantId && opened ? `${popupAriaId}-${ariaActiveDescendantId}` : undefined,\n    'aria-labelledby': ariaLabelledBy,\n    'aria-haspopup': 'listbox',\n    'aria-autocomplete': 'none',\n  };\n\n  return (\n    <div\n      className={classNames(\n        styles['CustomSelect'],\n        sizeY !== 'regular' && sizeYClassNames[sizeY],\n        className,\n      )}\n      style={style}\n      ref={handleRootRef}\n      onClick={passClickAndFocusToInputOnClick}\n      onMouseDown={preventInputBlurWhenClickInsideFocusedSelectArea}\n    >\n      <CustomSelectInput\n        autoComplete=\"off\"\n        autoCapitalize=\"none\"\n        autoCorrect=\"off\"\n        spellCheck=\"false\"\n        {...restProps}\n        {...selectInputAriaProps}\n        getRef={selectInputRef}\n        onFocus={onFocus}\n        onBlur={onBlur}\n        className={openedClassNames}\n        searchable={searchable}\n        fetching={fetching}\n        value={inputValue}\n        onKeyUp={handleKeyUp}\n        onKeyDown={handleKeyDownSelect}\n        onChange={onInputChange}\n        onClick={onClick}\n        before={before}\n        after={afterIcons}\n        selectType={selectType}\n        selectedOptionLabel={selected?.label}\n      />\n      <select\n        ref={selectElRef}\n        name={name}\n        onChange={onNativeSelectChange}\n        onBlur={props.onBlur}\n        onFocus={props.onFocus}\n        onClick={props.onClick}\n        value={nativeSelectValue}\n        aria-hidden\n        className={styles['CustomSelect__control']}\n        data-testid={nativeSelectTestId}\n        required={required}\n      >\n        {allowClearButton && <option key=\"\" value=\"\" />}\n        {optionsProp.map((item) => (\n          <option key={`${item.value}`} value={item.value} />\n        ))}\n      </select>\n      {opened && (\n        <CustomSelectDropdown\n          targetRef={containerRef}\n          placement={popperPlacement}\n          scrollBoxRef={setScrollBoxRef}\n          onPlacementChange={setPopperPlacement}\n          onMouseLeave={resetFocusedOption}\n          fetching={fetching}\n          overscrollBehavior={overscrollBehavior}\n          offsetDistance={dropdownOffsetDistance}\n          autoWidth={dropdownAutoWidth}\n          forcePortal={forceDropdownPortal}\n          autoHideScrollbar={autoHideScrollbar}\n          autoHideScrollbarDelay={autoHideScrollbarDelay}\n          noMaxHeight={noMaxHeight}\n          role=\"listbox\"\n          id={popupAriaId}\n          aria-labelledby={ariaLabelledBy}\n          tabIndex={-1}\n        >\n          {resolvedContent}\n        </CustomSelectDropdown>\n      )}\n    </div>\n  );\n}\n"],"names":["CustomSelect","sizeYClassNames","none","compact","warn","warnOnce","checkOptionsValueType","options","Set","map","item","value","size","handleOptionDown","e","preventDefault","filter","inputValue","filterFn","option","props","opened","setOpened","React","useState","before","name","className","getRef","getRootRef","popupDirection","style","onChange","children","onInputChangeProp","renderDropdown","onOpen","onClose","fetching","forceDropdownPortal","selectType","autoHideScrollbar","autoHideScrollbarDelay","searchable","renderOptionProp","defaultRenderOptionFn","optionsProp","emptyText","defaultFilterFn","iconProp","ClearButton","CustomSelectClearButton","allowClearButton","dropdownOffsetDistance","dropdownAutoWidth","noMaxHeight","ariaLabelledBy","clearButtonTestId","nativeSelectTestId","defaultValue","required","getSelectInputRef","overscrollBehavior","restProps","process","env","NODE_ENV","sizeY","useAdaptivity","containerRef","useRef","handleRootRef","useExternRef","scrollBoxRef","selectElRef","optionsWrapperRef","selectInputRef","focusedOptionIndex","setFocusedOptionIndex","isControlledOutside","setIsControlledOutside","undefined","nativeSelectValue","setNativeSelectValue","setInputValue","calculateInputValueFromOptions","popperPlacement","setPopperPlacement","setOptions","selectedOptionIndex","setSelectedOptionIndex","findSelectedIndex","useEffect","useIsomorphicLayoutEffect","some","event","Event","bubbles","current","dispatchEvent","selected","useMemo","length","openedClassNames","includes","scrollToElement","useCallback","index","center","dropdown","optionsWrapper","dropdownHeight","offsetHeight","scrollTop","itemTop","offsetTop","itemHeight","focusOptionByIndex","scrollTo","disabled","isValidIndex","setScrollBoxRef","ref","keyboardInput","setKeyboardInput","resetKeyboardInput","resetFocusedOption","onKeyboardInput","key","fullInput","close","selectOption","shouldTriggerOnChangeWhenControlledAndInnerValueIsOutOfSync","selectFocused","open","onBlur","onFocus","select","onClick","handleKeyUp","debounce","focusOption","type","nextIndex","findIndexAfter","beforeIndex","findIndexBefore","filterOptions","selectValue","updateSelectedOptionIndexOnValueChange","prevSelectValueRef","updateInputValueOnSelectValueChange","updatePrevSelectValue","onNativeSelectChange","newSelectedOptionIndex","currentTarget","onInputChange","target","areOptionsShown","handleKeyDownSelect","handleOptionClick","Array","prototype","indexOf","call","parentNode","prevMousePositionRef","x","y","focusOptionOnMouseMove","isMouseChangedPosition","Math","abs","clientX","clientY","popupAriaId","useId","renderOption","hovered","Fragment","label","onMouseDown","onMouseMove","id","resolvedContent","defaultDropdownContent","div","Footnote","focusOnInputTimerRef","focusOnInput","clearTimeout","setTimeout","focus","clearFocusOnInputTimer","controlledValueSet","uncontrolledValueSet","clearButtonShown","clearButton","clearSelectState","data-testid","icon","DropdownIcon","afterIcons","document","useDOM","passClickAndFocusToInputOnClick","clickTargetIsNotAnInput","click","inputIsNotFocused","activeElement","preventInputBlurWhenClickInsideFocusedSelectArea","isInputFocused","clickTarget","inputClicked","contains","ariaActiveDescendantOptionIndex","ariaActiveDescendantId","selectInputAriaProps","classNames","CustomSelectInput","autoComplete","autoCapitalize","autoCorrect","spellCheck","onKeyUp","onKeyDown","after","selectedOptionLabel","aria-hidden","CustomSelectDropdown","targetRef","placement","onPlacementChange","onMouseLeave","offsetDistance","autoWidth","forcePortal","role","aria-labelledby","tabIndex"],"mappings":"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"}